{"remainingRequest":"/home/chetan/vue-js/section_19/example-project/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/chetan/vue-js/section_19/example-project/src/components/users/UserList.vue?vue&type=style&index=0&id=7f615d60&scoped=true&lang=css","dependencies":[{"path":"/home/chetan/vue-js/section_19/example-project/src/components/users/UserList.vue","mtime":1646661768535},{"path":"/home/chetan/vue-js/section_19/example-project/node_modules/css-loader/dist/cjs.js","mtime":1646660653669},{"path":"/home/chetan/vue-js/section_19/example-project/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1646660654925},{"path":"/home/chetan/vue-js/section_19/example-project/node_modules/postcss-loader/src/index.js","mtime":1646660654057},{"path":"/home/chetan/vue-js/section_19/example-project/node_modules/cache-loader/dist/cjs.js","mtime":1646660653044},{"path":"/home/chetan/vue-js/section_19/example-project/node_modules/vue-loader-v16/dist/index.js","mtime":1646660654057}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CnVsIHsKICBsaXN0LXN0eWxlOiBub25lOwogIG1hcmdpbjogMDsKICBwYWRkaW5nOiAwOwp9Cg=="},{"version":3,"sources":["/home/chetan/vue-js/section_19/example-project/src/components/users/UserList.vue"],"names":[],"mappings":";AAkJA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACZ","file":"/home/chetan/vue-js/section_19/example-project/src/components/users/UserList.vue","sourceRoot":"","sourcesContent":["<template>\n  <base-container>\n    <h2>Active Users</h2>\n    <base-search @search=\"updateSearch\" :search-term=\"enteredSearchTerm\"></base-search>\n    <div>\n      <button @click=\"sort('asc')\" :class=\"{selected: sorting === 'asc'}\">Sort Ascending</button>\n      <button @click=\"sort('desc')\" :class=\"{selected: sorting === 'desc'}\">Sort Descending</button>\n    </div>\n    <ul>\n      <user-item\n        v-for=\"user in displayedUsers\"\n        :key=\"user.id\"\n        :user-name=\"user.fullName\"\n        :id=\"user.id\"\n        @list-projects=\"$emit('list-projects', $event)\"\n      ></user-item>\n    </ul>\n  </base-container>\n</template>\n\n<script>\nimport { ref, computed, watch } from 'vue';\nimport UserItem from './UserItem.vue';\n\nexport default {\n  components: {\n    UserItem,\n  },\n  props: ['users'],\n  emit: ['list-projects'],\n  setup(props) {\n    const enteredSearchTerm = ref('');\n    const activeSearchTerm = ref('');\n\n    const availableUsers = computed(function() {\n      let users = [];\n      if (activeSearchTerm.value) {\n        users = props.users.filter((usr) =>\n          usr.fullName.includes(activeSearchTerm.value)\n        );\n      } else if (props.users) {\n        users = props.users;\n      }\n      return users;\n    });\n\n    watch(enteredSearchTerm, function(newValue) {\n      setTimeout(() => {\n        if (newValue === enteredSearchTerm.value) {\n          activeSearchTerm.value = newValue;\n        }\n      }, 300);\n    })\n\n    function updateSearch(val) {\n      enteredSearchTerm.value = val;\n    }\n\n    const sorting = ref(null);\n\n    const displayedUsers = computed(function() {\n      if (!sorting.value) {\n        return availableUsers.value;\n      }\n      return availableUsers.value.slice().sort((u1, u2) => {\n        if (sorting.value === 'asc' && u1.fullName > u2.fullName) {\n          return 1;\n        } else if (sorting.value === 'asc') {\n          return -1;\n        } else if (sorting.value === 'desc' && u1.fullName > u2.fullName) {\n          return -1;\n        } else {\n          return 1;\n        }\n      });\n    })\n\n    function sort(mode) {\n      sorting.value = mode;\n    }\n\n    return{\n      enteredSearchTerm,\n      updateSearch,\n      displayedUsers,\n      sorting,\n      sort\n    }\n  },\n  // data() {\n  //   return {\n  //     enteredSearchTerm: '',\n  //     activeSearchTerm: '',\n  //     sorting: null,\n  //   };\n  // },\n  // computed: {\n  //   availableUsers() {\n  //     let users = [];\n  //     if (this.activeSearchTerm) {\n  //       users = this.users.filter((usr) =>\n  //         usr.fullName.includes(this.activeSearchTerm)\n  //       );\n  //     } else if (this.users) {\n  //       users = this.users;\n  //     }\n  //     return users;\n  //   },\n  //   displayedUsers() {\n  //     if (!this.sorting) {\n  //       return this.availableUsers;\n  //     }\n  //     return this.availableUsers.slice().sort((u1, u2) => {\n  //       if (this.sorting === 'asc' && u1.fullName > u2.fullName) {\n  //         return 1;\n  //       } else if (this.sorting === 'asc') {\n  //         return -1;\n  //       } else if (this.sorting === 'desc' && u1.fullName > u2.fullName) {\n  //         return -1;\n  //       } else {\n  //         return 1;\n  //       }\n  //     });\n  //   },\n  // },\n  // methods: {\n  //   updateSearch(val) {\n  //     this.enteredSearchTerm = val;\n  //   },\n  //   sort(mode) {\n  //     this.sorting = mode;\n  //   },\n  // },\n  // watch: {\n  //   enteredSearchTerm(val) {\n  //     setTimeout(() => {\n  //       if (val === this.enteredSearchTerm) {\n  //         this.activeSearchTerm = val;\n  //       }\n  //     }, 300);\n  //   }\n  // },\n};\n</script>\n\n<style scoped>\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n</style>"]}]}